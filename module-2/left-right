Given a 0-indexed integer array nums, find a 0-indexed integer array answer where:

answer.length == nums.length.

answer[i] = |leftSum[i] - rightSum[i]|.

Where:

leftSum[i] is the sum of elements to the left of the index i in the array nums. If there is no such element, leftSum[i] = 0.

rightSum[i] is the sum of elements to the right of the index i in the array nums. If there is no such element, rightSum[i] = 0.

Return the array answer.

Input Format

First line of input contains integer N which represents size of array.

second line of input contains N integer which represents elements of array.

Constraints

1 <= N <= 1000

1 <= nums[i] <= 10^5

Output Format

Print the answer array.

Sample Input 0
4
10 4 8 3

Sample Output 0
15 1 11 22



import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        int nums[] = new int[n];
        for(int i=0; i<n; i++){
            nums[i] = s.nextInt();
        }
        int[] result = leftRightDifference(nums);
        for(int j=0; j<result.length; j++){
        System.out.print(result[j]+" ");   
        }
    }
    
    public static int[] leftRightDifference(int[] nums){
        int n = nums.length;
        int[] answer = new int[n];
        int[] leftSum = new int[n];
        int[] rightSum = new int[n];

        // Calculate leftSum array
        for (int i = 1; i < n; i++) {
            leftSum[i] = leftSum[i - 1] + nums[i - 1];
        }

        // Calculate rightSum array
        for (int i = n - 2; i >= 0; i--) {
            rightSum[i] = rightSum[i + 1] + nums[i + 1];
        }

        // Calculate the absolute difference
        for (int i = 0; i < n; i++) {
            answer[i] = Math.abs(leftSum[i] - rightSum[i]);
        }

        return answer;
    }
}
